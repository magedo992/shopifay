openapi: 3.0.3
info:
  title: Shopifay API
  version: 1.0.0
  description: احلي مسا احمو

servers:
  - url: http://localhost:5959
    description: Local server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
          example: ahmed maged
        email:
          type: string
          example: ahmeaged900@gmail.com
        phone:
          type: string
          example: "01025564526"
        role:
          type: string
          example: CUSTOMER
        image:
          type: string
          example: https://res.cloudinary.com/demo/image/upload/v123/user/abc.png
        isActive:
          type: boolean
          example: false

    Product:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
          example: Laptop
        price:
          type: number
          example: 1200
        imageUrl:
          type: string
          example: https://res.cloudinary.com/demo/image/upload/v123/product/abc.png
        imageId:
          type: string
          example: product/abc

paths:
  /api/v1/auth/signup:
    post:
      summary: Signup new user
      description: Create account with image and send activation code to email.
      tags: [Auth]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: ahmed maged
                email:
                  type: string
                  example: ahmeaged900@gmail.com
                phone:
                  type: string
                  example: "01025564526"
                password:
                  type: string
                  example: ahmed123
                image:
                  type: string
                  format: binary
      responses:
        '201':
          description: User created

  /api/v1/auth/activate:
    post:
      summary: Activate account
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john@example.com
                code:
                  type: string
                  example: "123456"
      responses:
        '200':
          description: Account activated

  /api/v1/auth/login:
    post:
      summary: Login user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john@example.com
                password:
                  type: string
                  example: secret123
      responses:
        '200':
          description: Login success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'

  /api/v1/auth/forgot-password:
    post:
      summary: Request password reset code
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john@example.com
      responses:
        '200':
          description: Reset code sent to email

  /api/v1/auth/verify-reset-code:
    post:
      summary: Verify reset code
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john@example.com
                code:
                  type: string
                  example: "654321"
      responses:
        '200':
          description: Code verified

  /api/auth/reset-password:
    post:
      summary: Reset password
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john@example.com
                code:
                  type: string
                  example: "654321"
                newPassword:
                  type: string
                  example: "newPass123"
      responses:
        '200':
          description: Password reset success

  /api/products:
    get:
      summary: List products
      tags: [Products]
      responses:
        '200':
          description: Array of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

    post:
      summary: Create product
      description: Upload product with image. JWT required.
      tags: [Products]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Laptop
                price:
                  type: number
                  example: 1200
                image:
                  type: string
                  format: binary
      responses:
        '201':
          description: Product created

  /api/products/{id}:
    get:
      summary: Get product by ID
      tags: [Products]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Single product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
